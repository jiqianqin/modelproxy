{"version":3,"sources":["webpack:///./src/index.ts","webpack:///./src/libs/engine.factory.ts","webpack:///./src/libs/base.factory.ts","webpack:///./src/engines/default.ts","webpack:///./src/libs/compose.ts","webpack:///./src/libs/modelproxy.ts","webpack:///./src/libs/interface.factory.ts","webpack:///./src/schemas/index.ts","webpack:///./src/schemas/builder.ts","webpack:///./src/schemas/proxy.config.schema.ts","webpack:///./src/schemas/interface.schema.ts","webpack:///./src/models/method.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as engineFactory from './libs/engine.factory';\nimport { ModelProxy } from \"./libs/modelproxy\";\nimport { IEngine } from './models/engine';\nimport * as compose from './libs/compose';\nimport modelProxySchemaUtils from './schemas';\n\nimport * as baseFactory from \"./libs/base.factory\";\nimport * as schemas from \"./schemas/builder\";\nimport * as methodtype from \"./models/method\";\n\nexport default {\n    ModelProxy: ModelProxy.ModelProxy,\n    engineFactory: engineFactory.ModelProxy.engineFactory,\n    Compose: compose.ModelProxy.Compose,\n    modelProxySchemaUtils: modelProxySchemaUtils\n};\n\nexport const methods = methodtype.MethodType;\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import { IEngine } from \"../models/engine\";\nimport * as factory from \"./base.factory\";\nimport * as engines from \"../engines/default\";\n\nexport namespace ModelProxy {\n    export const engineFactory = new factory.ModelProxy.BaseFactory<IEngine>();\n\n    engineFactory.add(\"default\", new engines.ModelProxyEngine.DefaultEngine());\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/engine.factory.ts","import * as _ from \"lodash\";\n\nexport namespace ModelProxy {\n    /**\n     * 实例的工厂类\n     */\n    export class BaseFactory<T> {\n        protected intances: { [id: string]: T; } = {};\n\n        constructor() { }\n        /**\n         * 添加一个实例\n         * @param name     {string}    实例的名称\n         * @param engine   {IEngine}   实例\n         * @param override {boolean}   是否覆盖\n         * @return         {void}\n         */\n        add(name: string, intance: T, override: boolean = false): void {\n            if (override && this.intances.hasOwnProperty(name)) {\n                return console.error(`已经存在name=【${name}】的engine！`);\n            }\n            this.intances[name] = intance;\n        }\n        /**\n        * 取出一个实例\n        * @param name     {string}    实例的名称\n        * @return         {IEngine}\n        */\n        use(name: string): T {\n            if (!this.intances.hasOwnProperty(name)) {\n                let engines = _.map(this.intances, (val, key) => {\n                    return key;\n                });\n                throw new Error(`不存在name=【${name}】的engine！当前engines：【${engines.join(',')}】`);\n            }\n\n            return this.intances[name];\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/base.factory.ts","import { IEngine } from \"../models/engine\";\nimport { IInterfaceModel } from '../models/interface';\nimport * as compose from '../libs/compose';\nimport * as _ from 'lodash';\n\nexport namespace ModelProxyEngine {\n    export class DefaultEngine extends compose.ModelProxy.Compose implements IEngine {\n        constructor() {\n            super();\n        }\n\n        validate(data: any): boolean {\n            return true;\n        }\n\n        async proxy(intance: IInterfaceModel, data: any, params: any) {\n            return data;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/engines/default.ts","import * as _ from \"lodash\";\nimport * as Bluebird from \"bluebird\";\n\nexport namespace ModelProxy {\n    /**\n     * koa中间件方法\n     */\n    export class Compose {\n        private middlewares: Array<Function>;\n\n        constructor() {\n            this.middlewares = [];\n        }\n\n        /**\n         * 添加中间件函数\n         * @param func    {Function} 中间件方法\n         * @return        {void}\n         */\n        use(func: Function): void {\n            if (!_.isFunction(func)) {\n                throw new TypeError(\"middleware must be a function！\");\n            }\n\n            this.middlewares.push(func);\n        }\n\n        /**\n         * 生成中间件执行函数\n         * @return {Function}\n         */\n        compose(): Function {\n            if (!Array.isArray(this.middlewares)) throw new TypeError(\"Middleware stack must be an array!\");\n            for (const fn of this.middlewares) {\n                if (typeof fn !== \"function\") throw new TypeError(\"Middleware must be composed of functions!\");\n            }\n\n            return (context: any, next: Function): Bluebird.Thenable<any> => {\n                return new Bluebird((resolve, reject) => {\n                    let index = -1;\n\n                    const dispatch = (i: number) => {\n                        return new Bluebird((resolve1) => {\n                            let fn = this.middlewares[i];\n\n                            if (i <= index) {\n                                return reject(new Error(\"next() called multiple times\" + i + \"-\" + index));\n                            }\n                            index = i;\n                            if (i === this.middlewares.length) fn = next;\n                            if (!fn) {\n                                return resolve1(context);\n                            }\n                            try {\n                                fn(context, async () => {\n                                    await dispatch(i + 1);\n                                    // console.log(\"resolve\", i, context.isError);\n                                    resolve1();\n                                }).catch(reject);\n                            } catch (err) {\n                                console.log(\"compose error\" + err);\n                                reject(err);\n                            }\n                        });\n                    };\n\n                    return dispatch(0).then(resolve);\n                });\n            };\n        }\n\n        /**\n         * 错误的判断\n         * @param ctx   {Object} 执行上下文\n         * @param err   {Object} 错误数据\n         */\n        errorHandle(ctx: any, err: Error) {\n            ctx.isError = true;\n            ctx.err = err;\n            console.error(\"compose--\", err);\n        }\n\n        /**\n         * 包装compose函数\n         * @param complete {Function} 执行完毕后回调函数\n         * @return  {Function}\n         */\n        callback(complete: Function): Function {\n            const fn = this.compose();\n\n            return (options: Object): Bluebird.Thenable<any> => {\n                let ctx = _.extend({}, options || {}, {\n                    app: this\n                });\n\n                return fn(ctx, async (ctx: any, next: Function) => {\n                    await next();\n                }).catch((err: Error) => {\n                    this.errorHandle(ctx, err);\n                }).finally(() => {\n                    complete(ctx);\n                });\n            };\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/compose.ts","import { IInterfaceModel } from \"../models/interface\";\nimport * as interfaceFactory from \"./interface.factory\";\nimport { IProxyConfig } from \"../models/proxy.config\";\nimport schemas from \"../schemas\";\nimport * as compose from \"./compose\";\nimport * as Bluebird from \"bluebird\";\nimport * as tv4 from \"tv4\";\nimport * as _ from \"lodash\";\n\nexport namespace ModelProxy {\n    export class ModelProxy extends compose.ModelProxy.Compose {\n        private interfaces: { [id: string]: interfaceFactory.ModelProxy.InterfaceFactory; } = {};\n\n        constructor() {\n            super();\n        }\n\n        /**\n         * 初始化配置文件中的接口信息\n         * @param config {IProxyConfig} 配置信息\n         * @return {InterfaceFactory}\n         */\n        private initInterfaces(config: IProxyConfig): interfaceFactory.ModelProxy.InterfaceFactory {\n            let ifFacory = new interfaceFactory.ModelProxy.InterfaceFactory();\n\n            _.each(config.interfaces, (i: IInterfaceModel) => {\n                ifFacory.add(i.key, _.extend({}, {\n                    ns: config.key,\n                    engine: config.engine,\n                    states: config.states,\n                    state: config.state,\n                    mockDir: config.mockDir\n                }, i));\n            });\n\n            return ifFacory;\n        }\n\n        /** \n         * 导入配置\n         * @param config {IProxyConfig} 配置信息\n         * @return {InterfaceFactory}\n        */\n        async loadConfig(config: IProxyConfig) {\n            let valid: tv4.SingleResult = tv4.validateResult(config, schemas.proxyConfigSchema as tv4.JsonSchema);\n\n            if (!valid.valid) {\n                throw valid.error;\n            }\n\n            this.interfaces[config.key] = this.initInterfaces(config);\n\n            return this;\n        }\n\n        getNs(ns: string) {\n            if (!this.interfaces.hasOwnProperty(ns)) {\n                throw new Error(`没有找到${ns}空间`);\n            }\n\n            return this.interfaces[ns];\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/libs/modelproxy.ts","import { IInterfaceModel } from \"../models/interface\";\nimport * as _ from \"lodash\";\nimport * as factory from \"./base.factory\";\nimport * as engineFactory from \"./engine.factory\";\n\nexport namespace ModelProxy {\n    export class InterfaceFactory extends factory.ModelProxy.BaseFactory<IInterfaceModel> {\n        constructor() { super(); }\n\n        /**\n        * 添加一个实例\n        * @param name     {string}    实例的名称\n        * @param engine   {IEngine}   实例\n        * @param override {boolean}   是否覆盖\n        * @return {void}\n        */\n        add(name: string, intance: IInterfaceModel, override: boolean = false): void {\n            super.add(name, intance, override);\n            this[name] = this.execute.bind(this, intance);\n        }\n\n        /**\n         * 执行函数\n         * @param intance        {IInterfaceModel}  接口的具体实例\n         * @param data           {any}              调用接口所需的data\n         * @param params         {any}              调用接口所需的querystring\n         * @param intanceCover   {IInterfaceModel}  接口的实例，覆盖配置中的数据\n         * @return               {any}\n         */\n        async execute(intance: IInterfaceModel, data: any, params: any, intanceCover: IInterfaceModel) {\n            let engine;\n\n            intance = _.extend({}, intance, intanceCover);\n            engine = engineFactory.ModelProxy.engineFactory.use(intance.engine);\n\n            return engine.proxy(intance, data, params);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/libs/interface.factory.ts","import { ModleProxySchema } from \"./builder\";\nimport proxyConfigSchema from \"./proxy.config.schema\";\nimport interfaceSchema from \"./interface.schema\";\n\nexport default {\n    proxyConfigSchema: proxyConfigSchema,\n    interfaceSchema: interfaceSchema,\n    JsonSchemaBuilder: ModleProxySchema.JsonSchemaBuilder\n};\n\n\n// WEBPACK FOOTER //\n// ./src/schemas/index.ts","import * as _ from \"lodash\";\n\n// 关键字\t描述\n// $schema\t$schema 关键字状态，表示这个模式与 v4 规范草案书写一致。\n// title\t用它给我们的模式提供了标题。\n// description\t关于模式的描述。\n// type\ttype 关键字在我们的 JSON 数据上定义了第一个约束：必须是一个 JSON 对象。\n// properties\t定义各种键和他们的值类型，以及用于 JSON 文件中的最小值和最大值。\n// required\t存放必要属性列表。\n// minimum\t给值设置的约束条件，表示可以接受的最小值。\n// exclusiveMinimum\t如果存在 \"exclusiveMinimum\" 并且具有布尔值 true，如果它严格意义上大于 \"minimum\" 的值则实例有效。\n// maximum\t给值设置的约束条件，表示可以接受的最大值。\n// exclusiveMaximum\t如果存在 \"exclusiveMinimum\" 并且具有布尔值 true，如果它严格意义上小于 \"maximum\" 的值则实例有效。\n// multipleOf\t如果通过这个关键字的值分割实例的结果是一个数字则表示紧靠 \"multipleOf\" 的数字实例是有效的。\n// maxLength\t字符串实例字符的最大长度数值。\n// minLength\t字符串实例字符的最小长度数值。\n// pattern\t如果正则表达式匹配实例成功则字符串实例被认为是有效的\n\nconst _schema: string = \"http://json-schema.org/draft-04/schema#\";\n\nexport namespace ModleProxySchema {\n    export abstract class BaseTypeBuilder {\n        protected data: JsonSchema;\n\n        constructor() { this.data = {}; }\n\n        build(type: JsonSchemaTypes = \"string\", title?: string, description?: string): BaseTypeBuilder {\n            this.data = _.extend({\n                title: title || \"\",\n                description: description || \"\",\n                type: type\n            }, this.data || {});\n\n            return this;\n        };\n\n        properties(props: { [key: string]: JsonSchema; }): JsonSchemaBuilder {\n            this.data = _.extend({\n                properties: props,\n            }, this.data || {});\n\n            return this;\n        }\n\n        items(items: JsonSchema | JsonSchema[]): JsonSchemaBuilder {\n            this.data = _.extend({\n                items: items,\n            }, this.data || {});\n\n            return this;\n        }\n        schema(schema: string = _schema, id: string = _schema): BaseTypeBuilder {\n            this.data = _.extend({\n                \"$schema\": schema,\n                id: id\n            }, this.data || {});\n\n            return this;\n        }\n\n        required(...keys) {\n            this.data = _.extend({\n                required: keys\n            }, this.data || {});\n\n            return this;\n        }\n\n        toValue(): JsonSchema {\n            return this.data;\n        }\n    }\n\n\n    export class JsonSchemaBuilder extends BaseTypeBuilder {\n        constructor() {\n            super();\n        }\n\n        static init(): JsonSchemaBuilder {\n            return new JsonSchemaBuilder();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/schemas/builder.ts","import interfaceSchema from \"./interface.schema\";\nimport { ModleProxySchema } from \"./builder\";\n\nconst { JsonSchemaBuilder } = ModleProxySchema;\n\nexport default JsonSchemaBuilder.init().build(\"object\", null, \"modelProxy验证配置\")\n    .properties({\n        key: JsonSchemaBuilder.init().build().toValue(),\n        title: JsonSchemaBuilder.init().build().toValue(),\n        engine: JsonSchemaBuilder.init().build().toValue(),\n        states: JsonSchemaBuilder.init().build(\"object\").toValue(),\n        state: JsonSchemaBuilder.init().build().toValue(),\n        version: JsonSchemaBuilder.init().build().toValue(),\n        mockDir: JsonSchemaBuilder.init().build().toValue(),\n        interfaces: JsonSchemaBuilder.init().build(\"array\", \"接口配置数组\")\n            .items(interfaceSchema).toValue(),\n    }).required(\"key\", \"title\", \"states\").toValue();\n\n\n// WEBPACK FOOTER //\n// ./src/schemas/proxy.config.schema.ts","import { ModleProxySchema } from \"./builder\";\n\nconst { JsonSchemaBuilder } = ModleProxySchema;\n\nexport default JsonSchemaBuilder.init().build(\"object\").properties({\n    key: JsonSchemaBuilder.init().build().toValue(),\n    title: JsonSchemaBuilder.init().build().toValue(),\n    engine: JsonSchemaBuilder.init().build().toValue(),\n    states: JsonSchemaBuilder.init().build(\"object\").toValue(),\n    state: JsonSchemaBuilder.init().build().toValue(),\n    version: JsonSchemaBuilder.init().build().toValue(),\n    method: JsonSchemaBuilder.init().build().toValue(),\n    path: JsonSchemaBuilder.init().build().toValue(),\n    config: JsonSchemaBuilder.init().build(\"object\").toValue(),\n    mockDir: JsonSchemaBuilder.init().build().toValue()\n}).required(\"key\", \"title\", \"method\", \"path\").toValue();\n\n\n// WEBPACK FOOTER //\n// ./src/schemas/interface.schema.ts","/**\n * 操作类型\n */\nexport enum MethodType {\n    GET,\n    POST,\n    DELETE,\n    PUT,\n    HEAD,\n    PATCH,\n    OPTIONS\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/method.ts"],"sourceRoot":""}